#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json

def test_all_fixes():
    print("üß™ –¢–ï–°–¢ –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    base_url = "http://localhost:5002/api"
    
    # –¢–µ—Å—Ç 1: –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("üìù –¢–µ—Å—Ç 1: –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    login_data = {
        "email": "oo@gmail.com",
        "password": "123456"
    }
    
    response = requests.post(f"{base_url}/login", json=login_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code}")
        return
    
    token = response.json()["access_token"]
    headers = {"Authorization": f"Bearer {token}"}
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    print("\nüìù –¢–µ—Å—Ç 2: –ù–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã")
    
    # –î–µ—Ç–∞–ª–∏ —Ä–æ–ª–ª–∞
    response = requests.get(f"{base_url}/rolls/153", headers=headers)
    if response.status_code == 200:
        print("‚úÖ GET /api/rolls/153 - –¥–µ—Ç–∞–ª–∏ —Ä–æ–ª–ª–∞")
    else:
        print(f"‚ùå GET /api/rolls/153 - {response.status_code}")
    
    # –î–µ—Ç–∞–ª–∏ —Å–µ—Ç–∞
    response = requests.get(f"{base_url}/sets/81", headers=headers)
    if response.status_code == 200:
        print("‚úÖ GET /api/sets/81 - –¥–µ—Ç–∞–ª–∏ —Å–µ—Ç–∞")
    else:
        print(f"‚ùå GET /api/sets/81 - {response.status_code}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    response = requests.get(f"{base_url}/other-items", headers=headers)
    if response.status_code == 200:
        print("‚úÖ GET /api/other-items - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã")
    else:
        print(f"‚ùå GET /api/other-items - {response.status_code}")
    
    # –¢–µ—Å—Ç 3: –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
    print("\nüìù –¢–µ—Å—Ç 3: –ò–∑–±—Ä–∞–Ω–Ω–æ–µ")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    add_fav_data = {
        "item_type": "roll",
        "item_id": 153
    }
    
    response = requests.post(f"{base_url}/favorites/add", json=add_fav_data, headers=headers)
    if response.status_code == 200:
        print("‚úÖ POST /api/favorites/add - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    else:
        print(f"‚ùå POST /api/favorites/add - {response.status_code}")
        if response.status_code == 500:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    response = requests.get(f"{base_url}/favorites", headers=headers)
    if response.status_code == 200:
        print("‚úÖ GET /api/favorites - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ")
    else:
        print(f"‚ùå GET /api/favorites - {response.status_code}")
    
    # –¢–µ—Å—Ç 4: –ê–¥–º–∏–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã (–≤—Ö–æ–¥ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞)
    print("\nüìù –¢–µ—Å—Ç 4: –ê–¥–º–∏–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã")
    
    chef_login = {
        "email": "chef@sushiroll.com",
        "password": "chef123"
    }
    
    response = requests.post(f"{base_url}/login", json=chef_login)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {response.status_code}")
        return
    
    chef_token = response.json()["access_token"]
    chef_headers = {"Authorization": f"Bearer {chef_token}"}
    print("‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä –≤–æ—à–µ–ª")
    
    # –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    response = requests.get(f"{base_url}/admin/ingredients", headers=chef_headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ GET /api/admin/ingredients - {data['total']} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
    else:
        print(f"‚ùå GET /api/admin/ingredients - {response.status_code}")
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    response = requests.get(f"{base_url}/admin/users", headers=chef_headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ GET /api/admin/users - {data['total']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    else:
        print(f"‚ùå GET /api/admin/users - {response.status_code}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    response = requests.get(f"{base_url}/admin/stats", headers=chef_headers)
    if response.status_code == 200:
        data = response.json()
        stats = data['stats']
        print(f"‚úÖ GET /api/admin/stats - {stats['total_orders']} –∑–∞–∫–∞–∑–æ–≤, {stats['total_users']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    else:
        print(f"‚ùå GET /api/admin/stats - {response.status_code}")
    
    # –†–µ—Ü–µ–ø—Ç—É—Ä–∞ —Ä–æ–ª–ª–∞
    response = requests.get(f"{base_url}/admin/rolls/153/recipe", headers=chef_headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ GET /api/admin/rolls/153/recipe - —Ä–µ—Ü–µ–ø—Ç—É—Ä–∞ —Ä–æ–ª–ª–∞")
    else:
        print(f"‚ùå GET /api/admin/rolls/153/recipe - {response.status_code}")
    
    # –¢–µ—Å—Ç 5: –ö–æ—Ä–∑–∏–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    print("\nüìù –¢–µ—Å—Ç 5: –ö–æ—Ä–∑–∏–Ω–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–±—ã—á–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    response = requests.get(f"{base_url}/cart", headers=headers)
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ GET /api/cart - {data['total_items']} —Ç–æ–≤–∞—Ä–æ–≤")
        
        for item in data['cart']:
            if item.get('image_url'):
                print(f"   ‚úÖ {item['name']} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {item['image_url'][:50]}...")
            else:
                print(f"   ‚ùå {item['name']} - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    else:
        print(f"‚ùå GET /api/cart - {response.status_code}")
    
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    print("=" * 50)
    print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print("   - –ù–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    print("   - –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
    print("   - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω–µ –µ—Å—Ç—å")
    print("   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ")

if __name__ == "__main__":
    test_all_fixes()
