#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3

def check_current_database():
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–ª—ã
        cursor.execute("SELECT COUNT(*) FROM rolls")
        rolls_count = cursor.fetchone()[0]
        print(f"üç£ –†–æ–ª–ª—ã: {rolls_count}")
        
        if rolls_count > 0:
            cursor.execute("SELECT id, name, sale_price, image_url FROM rolls LIMIT 5")
            sample_rolls = cursor.fetchall()
            print("   üìù –ü—Ä–∏–º–µ—Ä—ã —Ä–æ–ª–ª–æ–≤:")
            for roll in sample_rolls:
                print(f"      ID {roll[0]}: {roll[1]} - {roll[2]} —Å–æ–º - {roll[3][:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—ã
        cursor.execute("SELECT COUNT(*) FROM sets")
        sets_count = cursor.fetchone()[0]
        print(f"\nüç± –°–µ—Ç—ã: {sets_count}")
        
        if sets_count > 0:
            cursor.execute("SELECT id, name, set_price, image_url FROM sets LIMIT 5")
            sample_sets = cursor.fetchall()
            print("   üìù –ü—Ä–∏–º–µ—Ä—ã —Å–µ—Ç–æ–≤:")
            for set_item in sample_sets:
                print(f"      ID {set_item[0]}: {set_item[1]} - {set_item[2]} —Å–æ–º - {set_item[3][:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
        cursor.execute("SELECT COUNT(*) FROM orders")
        orders_count = cursor.fetchone()[0]
        print(f"\nüì¶ –ó–∞–∫–∞–∑—ã: {orders_count}")
        
        if orders_count > 0:
            cursor.execute("SELECT id, user_id, total_price, status, created_at FROM orders ORDER BY created_at DESC LIMIT 5")
            sample_orders = cursor.fetchall()
            print("   üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:")
            for order in sample_orders:
                print(f"      ID {order[0]}: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {order[1]} - {order[2]} —Å–æ–º - {order[3]} - {order[4]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM users")
        users_count = cursor.fetchone()[0]
        print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞
        cursor.execute("SELECT id, name, email, is_admin FROM users WHERE is_admin = 1")
        chefs = cursor.fetchall()
        print(f"üë®‚Äçüç≥ –®–µ—Ñ-–ø–æ–≤–∞—Ä—ã: {len(chefs)}")
        for chef in chefs:
            print(f"   ID {chef[0]}: {chef[1]} ({chef[2]}) - –ê–¥–º–∏–Ω: {chef[3]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        cursor.execute("SELECT COUNT(*) FROM ingredients")
        ingredients_count = cursor.fetchone()[0]
        print(f"\nü•¢ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {ingredients_count}")
        
        conn.close()
        
        print("\n‚úÖ –ü–†–û–ë–õ–ï–ú–´ –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
        if rolls_count == 0:
            print("‚ùå –ù–µ—Ç —Ä–æ–ª–ª–æ–≤ –≤ –±–∞–∑–µ")
        if sets_count == 0:
            print("‚ùå –ù–µ—Ç —Å–µ—Ç–æ–≤ –≤ –±–∞–∑–µ")
        if orders_count == 0:
            print("‚ùå –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ")
        if len(chefs) == 0:
            print("‚ùå –ù–µ—Ç —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ")
        
        print("\nüìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:")
        print("1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ—á–µ–º—É —Ä–æ–ª–ª—ã –∏ —Å–µ—Ç—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ")
        print("2. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —à–µ—Ñ-–ø–æ–≤–∞—Ä –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∑–∞–∫–∞–∑—ã")
        print("3. –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å–≤—è–∑—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –±—ç–∫–µ–Ω–¥–æ–º")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_current_database()

