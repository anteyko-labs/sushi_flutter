import sqlite3
import os

def debug_database():
    """–û—Ç–ª–∞–¥–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    if not os.path.exists('sushi_express.db'):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        return
    
    conn = sqlite3.connect('sushi_express.db')
    cursor = conn.cursor()
    
    try:
        print("üîç –û—Ç–ª–∞–¥–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        print(f"üìã –¢–∞–±–ª–∏—Ü: {len(tables)}")
        
        for table in tables:
            table_name = table[0]
            cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
            count = cursor.fetchone()[0]
            print(f"   {table_name}: {count} –∑–∞–ø–∏—Å–µ–π")
        
        print("\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º users
        cursor.execute("SELECT id, name, email FROM users LIMIT 3")
        users = cursor.fetchall()
        print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–ø–µ—Ä–≤—ã–µ 3):")
        for user in users:
            print(f"   ID {user[0]}: {user[1]} ({user[2]})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ingredients
        cursor.execute("SELECT id, name FROM ingredients LIMIT 3")
        ingredients = cursor.fetchall()
        print(f"\nü•¨ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (–ø–µ—Ä–≤—ã–µ 3):")
        for ing in ingredients:
            print(f"   ID {ing[0]}: {ing[1]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º rolls
        cursor.execute("SELECT id, name FROM rolls LIMIT 3")
        rolls = cursor.fetchall()
        print(f"\nüç£ –†–æ–ª–ª—ã (–ø–µ—Ä–≤—ã–µ 3):")
        for roll in rolls:
            print(f"   ID {roll[0]}: {roll[1]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º sets
        cursor.execute("SELECT id, name FROM sets LIMIT 3")
        sets = cursor.fetchall()
        print(f"\nüì¶ –°–µ—Ç—ã (–ø–µ—Ä–≤—ã–µ 3):")
        for set_item in sets:
            print(f"   ID {set_item[0]}: {set_item[1]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º autoincrement
        cursor.execute("SELECT name, seq FROM sqlite_sequence")
        sequences = cursor.fetchall()
        print(f"\nüî¢ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
        for seq in sequences:
            print(f"   {seq[0]}: {seq[1]}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == '__main__':
    debug_database()
