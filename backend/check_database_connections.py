#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∑–∞–∫–∞–∑–∞–º–∏ –∏ —à–µ—Ñ-–ø–æ–≤–∞—Ä–æ–º
"""

import sqlite3

def check_database_connections():
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ï–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        print("üë• –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
        print("-" * 30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT id, email, name, is_admin FROM users")
        users = cursor.fetchall()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        
        for user in users:
            admin_status = "üë®‚Äçüíº –ê–î–ú–ò–ù" if user[3] else "üë§ –û–±—ã—á–Ω—ã–π"
            print(f"  {admin_status} ID:{user[0]} - {user[1]} ({user[2]})")
        
        print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ó–ê–ö–ê–ó–û–í")
        print("-" * 30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
        cursor.execute("SELECT COUNT(*) FROM orders")
        total_orders = cursor.fetchone()[0]
        print(f"üìä –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {total_orders}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤
        cursor.execute("""
            SELECT o.id, o.user_id, u.email, u.name, o.total_price, o.status, o.created_at
            FROM orders o
            JOIN users u ON o.user_id = u.id
            ORDER BY o.created_at DESC
            LIMIT 5
        """)
        recent_orders = cursor.fetchall()
        
        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤:")
        for order in recent_orders:
            print(f"  –ó–∞–∫–∞–∑ #{order[0]} –æ—Ç {order[2]} ({order[3]}) - {order[4]} —Å–æ–º, —Å—Ç–∞—Ç—É—Å: {order[5]}")
        
        print("\nüîó –ü–†–û–í–ï–†–ö–ê –°–í–Ø–ó–ï–ô –ó–ê–ö–ê–ó–û–í –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò")
        print("-" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("""
            SELECT o.id, o.user_id 
            FROM orders o
            LEFT JOIN users u ON o.user_id = u.id
            WHERE u.id IS NULL
        """)
        orphan_orders = cursor.fetchall()
        
        if orphan_orders:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω—ã –∑–∞–∫–∞–∑—ã –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(orphan_orders)}")
            for order in orphan_orders:
                print(f"  –ó–∞–∫–∞–∑ #{order[0]} —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID:{order[1]}")
        else:
            print("‚úÖ –í—Å–µ –∑–∞–∫–∞–∑—ã —Å–≤—è–∑–∞–Ω—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        
        print("\nüë®‚Äçüç≥ –ü–†–û–í–ï–†–ö–ê –®–ï–§-–ü–û–í–ê–†–ê")
        print("-" * 30)
        
        # –ò—â–µ–º —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞
        cursor.execute("SELECT id, email, name, is_admin FROM users WHERE email = 'chef@sushiroll.com'")
        chef = cursor.fetchone()
        
        if chef:
            print(f"‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω: {chef[2]} ({chef[1]})")
            print(f"   ID: {chef[0]}, –ê–¥–º–∏–Ω: {'–î–∞' if chef[3] else '–ù–µ—Ç'}")
        else:
            print("‚ùå –®–µ—Ñ-–ø–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            print("üîß –°–æ–∑–¥–∞–µ–º —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞...")
            
            # –°–æ–∑–¥–∞–µ–º —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞
            cursor.execute("""
                INSERT INTO users (email, name, phone, password_hash, is_admin, created_at)
                VALUES ('chef@sushiroll.com', '–®–µ—Ñ-–ø–æ–≤–∞—Ä', '+996555123456', 
                        'pbkdf2:sha256:600000$abc123$hash', 1, datetime('now'))
            """)
            conn.commit()
            print("‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω!")
        
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê–ö–ê–ó–û–í –ü–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú")
        print("-" * 40)
        
        cursor.execute("""
            SELECT u.email, u.name, COUNT(o.id) as order_count, 
                   SUM(o.total_price) as total_spent
            FROM users u
            LEFT JOIN orders o ON u.id = o.user_id
            GROUP BY u.id, u.email, u.name
            ORDER BY order_count DESC
        """)
        user_stats = cursor.fetchall()
        
        for stat in user_stats:
            print(f"  {stat[0]} ({stat[1]}): {stat[2]} –∑–∞–∫–∞–∑–æ–≤, {stat[3] or 0} —Å–æ–º")
        
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ ORDER_ITEMS")
        print("-" * 40)
        
        cursor.execute("SELECT COUNT(*) FROM order_items")
        order_items_count = cursor.fetchone()[0]
        print(f"üì¶ –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤: {order_items_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
        cursor.execute("""
            SELECT oi.id, oi.order_id, oi.item_type, oi.item_id, oi.quantity, oi.unit_price
            FROM order_items oi
            ORDER BY oi.id DESC
            LIMIT 5
        """)
        recent_items = cursor.fetchall()
        
        print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤:")
        for item in recent_items:
            print(f"  –≠–ª–µ–º–µ–Ω—Ç #{item[0]} –≤ –∑–∞–∫–∞–∑–µ #{item[1]}: {item[2]} ID:{item[3]} x{item[4]} = {item[5]} —Å–æ–º")
        
        conn.close()
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    check_database_connections()

