#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–∏ Order
"""

import sqlite3

def check_order_model():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ú–û–î–ï–õ–ò ORDER")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã orders
        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã orders:")
        cursor.execute("PRAGMA table_info(orders)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"   {col[1]} ({col[2]})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ—Ä –∑–∞–∫–∞–∑–∞
        print("\nüìã –ü—Ä–∏–º–µ—Ä –∑–∞–∫–∞–∑–∞:")
        cursor.execute("SELECT * FROM orders LIMIT 1")
        order = cursor.fetchone()
        
        if order:
            column_names = [description[0] for description in cursor.description]
            print(f"   –ö–æ–ª–æ–Ω–∫–∏: {column_names}")
            print(f"   –î–∞–Ω–Ω—ã–µ: {dict(zip(column_names, order))}")
        else:
            print("   –ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_order_model()

