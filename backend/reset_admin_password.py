import sqlite3
from werkzeug.security import generate_password_hash

def reset_admin_password():
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        print("üîê –°–±—Ä–∞—Å—ã–≤–∞—é –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞...")
        print("=" * 50)
        
        # –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        new_password = "admin123"
        hashed_password = generate_password_hash(new_password)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞
        cursor.execute("""
            UPDATE users 
            SET password_hash = ? 
            WHERE email = 'ss@gmail.com' AND is_admin = 1
        """, (hashed_password,))
        
        if cursor.rowcount > 0:
            print(f"‚úÖ –ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∞–¥–º–∏–Ω–∞ ss@gmail.com")
            print(f"üîë –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}")
            print(f"üîê –•–µ—à: {hashed_password[:50]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            cursor.execute("SELECT name, email, is_admin FROM users WHERE email = 'ss@gmail.com'")
            user = cursor.fetchone()
            if user:
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user[0]} ({user[1]}) - –ê–¥–º–∏–Ω: {user[2]}")
        else:
            print("‚ùå –ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω")
        
        conn.commit()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    reset_admin_password()
