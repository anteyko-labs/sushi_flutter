import requests
import json

def test_flutter_api():
    base_url = "http://localhost:5000"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É—é API –¥–ª—è Flutter...")
    print("=" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –≤—Ö–æ–¥–∏–º –∫–∞–∫ –∞–¥–º–∏–Ω
    print("1Ô∏è‚É£ –í—Ö–æ–¥ –∫–∞–∫ –∞–¥–º–∏–Ω...")
    login_data = {
        "email": "ss@gmail.com",
        "password": "admin123"
    }
    
    try:
        response = requests.post(
            f"{base_url}/api/login",
            json=login_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            access_token = data.get('access_token')
            print(f"‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∞–¥–º–∏–Ω endpoints
            headers = {"Authorization": f"Bearer {access_token}"}
            
            print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –∞–¥–º–∏–Ω API endpoints...")
            
            # Users
            try:
                users_response = requests.get(f"{base_url}/api/admin/users", headers=headers)
                print(f"   üë• Users: {users_response.status_code}")
                if users_response.status_code == 200:
                    users_data = users_response.json()
                    print(f"      üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(users_data.get('users', []))} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                else:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞: {users_response.text[:100]}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            # Ingredients
            try:
                ingredients_response = requests.get(f"{base_url}/api/admin/ingredients", headers=headers)
                print(f"   ü•¨ Ingredients: {ingredients_response.status_code}")
                if ingredients_response.status_code == 200:
                    ingredients_data = ingredients_response.json()
                    print(f"      üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(ingredients_data.get('ingredients', []))} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤")
                else:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞: {ingredients_response.text[:100]}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            # Rolls
            try:
                rolls_response = requests.get(f"{base_url}/api/admin/rolls", headers=headers)
                print(f"   üç£ Rolls: {rolls_response.status_code}")
                if rolls_response.status_code == 200:
                    rolls_data = rolls_response.json()
                    print(f"      üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(rolls_data.get('rolls', []))} —Ä–æ–ª–ª–æ–≤")
                else:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞: {rolls_response.text[:100]}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            # Sets
            try:
                sets_response = requests.get(f"{base_url}/api/admin/sets", headers=headers)
                print(f"   üç± Sets: {sets_response.status_code}")
                if sets_response.status_code == 200:
                    sets_data = sets_response.json()
                    print(f"      üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(sets_data.get('sets', []))} —Å–µ—Ç–æ–≤")
                else:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞: {sets_response.text[:100]}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            # Other items
            try:
                other_response = requests.get(f"{base_url}/api/admin/other-items", headers=headers)
                print(f"   ü•§ Other items: {other_response.status_code}")
                if other_response.status_code == 200:
                    other_data = other_response.json()
                    print(f"      üìä –ü–æ–ª—É—á–µ–Ω–æ: {len(other_data.get('items', []))} —Ç–æ–≤–∞—Ä–æ–≤")
                else:
                    print(f"      ‚ùå –û—à–∏–±–∫–∞: {other_response.text[:100]}")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞: {e}")
            
        else:
            print(f"‚ùå –í—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_flutter_api()
