#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sqlite3
import shutil
from pathlib import Path

def find_original_database():
    print("üîç –ü–û–ò–°–ö –û–†–ò–ì–ò–ù–ê–õ–¨–ù–û–ô –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã .db –≤ –ø—Ä–æ–µ–∫—Ç–µ
    project_root = Path("..")
    db_files = list(project_root.rglob("*.db"))
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {len(db_files)}")
    for db_file in db_files:
        print(f"   {db_file}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    for db_file in db_files:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞: {db_file}")
        try:
            conn = sqlite3.connect(db_file)
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
            tables = [row[0] for row in cursor.fetchall()]
            print(f"   üìä –¢–∞–±–ª–∏—Ü—ã: {tables}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–ª—ã
            if 'rolls' in tables:
                cursor.execute("SELECT COUNT(*) FROM rolls")
                rolls_count = cursor.fetchone()[0]
                print(f"   üç£ –†–æ–ª–ª—ã: {rolls_count}")
                
                if rolls_count > 0:
                    cursor.execute("SELECT name, sale_price, image_url FROM rolls LIMIT 3")
                    sample_rolls = cursor.fetchall()
                    print(f"   üìù –ü—Ä–∏–º–µ—Ä—ã —Ä–æ–ª–ª–æ–≤:")
                    for roll in sample_rolls:
                        print(f"      {roll[0]} - {roll[1]} —Å–æ–º - {roll[2]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—ã
            if 'sets' in tables:
                cursor.execute("SELECT COUNT(*) FROM sets")
                sets_count = cursor.fetchone()[0]
                print(f"   üç± –°–µ—Ç—ã: {sets_count}")
                
                if sets_count > 0:
                    cursor.execute("SELECT name, set_price, image_url FROM sets LIMIT 3")
                    sample_sets = cursor.fetchall()
                    print(f"   üìù –ü—Ä–∏–º–µ—Ä—ã —Å–µ—Ç–æ–≤:")
                    for set_item in sample_sets:
                        print(f"      {set_item[0]} - {set_item[1]} —Å–æ–º - {set_item[2]}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
            if 'orders' in tables:
                cursor.execute("SELECT COUNT(*) FROM orders")
                orders_count = cursor.fetchone()[0]
                print(f"   üì¶ –ó–∞–∫–∞–∑—ã: {orders_count}")
            
            conn.close()
            
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –±–∞–∑–∞ —Å –¥–∞–Ω–Ω—ã–º–∏, –∫–æ–ø–∏—Ä—É–µ–º –µ—ë
            if rolls_count > 0 and sets_count > 0:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –±–∞–∑–∞ —Å –¥–∞–Ω–Ω—ã–º–∏!")
                backup_path = "sushi_express_backup.db"
                shutil.copy2(db_file, backup_path)
                print(f"   üíæ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   1. –ù–∞–π—Ç–∏ –±–∞–∑—É —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Ä–æ–ª–ª–æ–≤ –∏ —Å–µ—Ç–æ–≤")
    print("   2. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë –≤ backend/sushi_express.db")
    print("   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ")

if __name__ == "__main__":
    find_original_database()

