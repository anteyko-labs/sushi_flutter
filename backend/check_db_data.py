#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3

def check_database():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    conn = sqlite3.connect('sushi_express.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    cursor.execute('SELECT COUNT(*) FROM ingredients')
    ingredients_count = cursor.fetchone()[0]
    print(f"üì¶ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {ingredients_count}")
    
    cursor.execute('SELECT COUNT(*) FROM rolls')
    rolls_count = cursor.fetchone()[0]
    print(f"üç£ –†–æ–ª–ª–æ–≤: {rolls_count}")
    
    cursor.execute('SELECT COUNT(*) FROM sets')
    sets_count = cursor.fetchone()[0]
    print(f"üç± –°–µ—Ç–æ–≤: {sets_count}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
    print("\nüìã –ü–ï–†–í–´–ï 3 –†–û–õ–õ–ê:")
    cursor.execute('SELECT id, name, description, sale_price, image_url FROM rolls LIMIT 3')
    rolls = cursor.fetchall()
    for roll in rolls:
        print(f"   ID: {roll[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {roll[1]}, –û–ø–∏—Å–∞–Ω–∏–µ: {roll[2][:50] if roll[2] else '–ù–µ—Ç'}, –¶–µ–Ω–∞: {roll[3]}, –§–æ—Ç–æ: {roll[4] or '–ù–µ—Ç'}")
    
    print("\nüìã –ü–ï–†–í–´–ï 3 –°–ï–¢–ê:")
    cursor.execute('SELECT id, name, description, set_price, image_url FROM sets LIMIT 3')
    sets = cursor.fetchall()
    for set_item in sets:
        print(f"   ID: {set_item[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {set_item[1]}, –û–ø–∏—Å–∞–Ω–∏–µ: {set_item[2][:50] if set_item[2] else '–ù–µ—Ç'}, –¶–µ–Ω–∞: {set_item[3]}, –§–æ—Ç–æ: {set_item[4] or '–ù–µ—Ç'}")
    
    print("\nüìã –ü–ï–†–í–´–ï 3 –ò–ù–ì–†–ï–î–ò–ï–ù–¢–ê:")
    cursor.execute('SELECT id, name, cost_per_unit, price_per_unit, stock_quantity, unit FROM ingredients LIMIT 3')
    ingredients = cursor.fetchall()
    for ingredient in ingredients:
        print(f"   ID: {ingredient[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {ingredient[1]}, –°—Ç–æ–∏–º–æ—Å—Ç—å: {ingredient[2]}, –¶–µ–Ω–∞: {ingredient[3]}, –û—Å—Ç–∞—Ç–æ–∫: {ingredient[4]} {ingredient[5]}")
    
    conn.close()

if __name__ == "__main__":
    check_database()
