#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
"""

def check_order_creation_code():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ö–û–î–ê –°–û–ó–î–ê–ù–ò–Ø –ó–ê–ö–ê–ó–ê")
    print("=" * 50)
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª app_sqlite.py
    with open('app_sqlite.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    if '@app.route(\'/api/orders\', methods=[\'POST\'])' in content:
        print("‚úÖ Endpoint —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞–π–¥–µ–Ω")
        
        # –ù–∞–π–¥–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        lines = content.split('\n')
        in_create_order = False
        create_order_lines = []
        
        for i, line in enumerate(lines):
            if '@app.route(\'/api/orders\', methods=[\'POST\'])' in line:
                in_create_order = True
                create_order_lines.append(f"{i+1:3}: {line}")
                continue
                
            if in_create_order and line.strip().startswith('@') and 'route' in line:
                break
                
            if in_create_order:
                create_order_lines.append(f"{i+1:3}: {line}")
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–≤–æ–¥
                if len(create_order_lines) > 50:
                    create_order_lines.append("... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥)")
                    break
        
        print("\nüìã –ö–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:")
        for line in create_order_lines:
            print(line)
    else:
        print("‚ùå Endpoint —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ü–æ–∏—â–µ–º –ª—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è Order
        lines = content.split('\n')
        print("\nüîç –ü–æ–∏—Å–∫ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π Order:")
        for i, line in enumerate(lines):
            if 'Order(' in line:
                print(f"   –°—Ç—Ä–æ–∫–∞ {i+1}: {line.strip()}")

if __name__ == "__main__":
    check_order_creation_code()

