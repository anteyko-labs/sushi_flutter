#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import traceback

def debug_server_startup():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ü–£–°–ö–ê –°–ï–†–í–ï–†–ê")
    print("=" * 50)
    
    try:
        print("üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π...")
        
        print("  - –ò–º–ø–æ—Ä—Ç Flask...")
        from flask import Flask, request, jsonify
        print("    ‚úÖ Flask –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("  - –ò–º–ø–æ—Ä—Ç SQLAlchemy...")
        from flask_sqlalchemy import SQLAlchemy
        print("    ‚úÖ SQLAlchemy –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("  - –ò–º–ø–æ—Ä—Ç JWT...")
        from flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity
        print("    ‚úÖ JWT –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("  - –ò–º–ø–æ—Ä—Ç CORS...")
        from flask_cors import CORS
        print("    ‚úÖ CORS –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        print("  - –ò–º–ø–æ—Ä—Ç –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π...")
        from werkzeug.security import generate_password_hash, check_password_hash
        import os
        import json
        from datetime import datetime, timedelta
        print("    ‚úÖ –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π...")
        from models import db, User, Ingredient, Roll, RollIngredient, Set, SetRoll, Order, OrderItem, OtherItem, LoyaltyCard, LoyaltyRoll, LoyaltyCardUsage, ReferralUsage
        print("    ‚úÖ –ú–æ–¥–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        app = Flask(__name__)
        print("    ‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
        app.config['SECRET_KEY'] = 'your-super-secret-key-change-this-in-production'
        db_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'sushi_express.db')
        app.config['SQLALCHEMY_DATABASE_URI'] = f'sqlite:///{db_path}'
        app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
        app.config['JWT_SECRET_KEY'] = 'jwt-secret-string'
        app.config['JWT_ACCESS_TOKEN_EXPIRES'] = timedelta(days=30)
        print("    ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π...")
        db.init_app(app)
        print("    ‚úÖ SQLAlchemy –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        jwt = JWTManager()
        jwt.init_app(app)
        print("    ‚úÖ JWT –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        CORS(app)
        print("    ‚úÖ CORS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
        
        @app.route('/api/health', methods=['GET'])
        def health_check():
            return jsonify({
                'status': 'OK', 
                'message': 'Sushi Express API is running!',
                'database': 'SQLite',
                'timestamp': datetime.now().isoformat()
            })
        
        print("    ‚úÖ –ú–∞—Ä—à—Ä—É—Ç /api/health —Å–æ–∑–¥–∞–Ω")
        
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        with app.app_context():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            try:
                User.query.first()
                print("    ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
                return
        
        print("\n‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üöÄ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É")
        
        print("\nüìù –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
        app.run(host='0.0.0.0', port=5000, debug=True)
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:")
        print("   pip install flask flask-sqlalchemy flask-jwt-extended flask-cors")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("\nüîç –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:")
        traceback.print_exc()

if __name__ == "__main__":
    debug_server_startup()

