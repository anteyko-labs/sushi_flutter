#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
"""

import sqlite3

def check_orders_table():
    print("üì¶ –¢–ê–ë–õ–ò–¶–ê –ó–ê–ö–ê–ó–û–í –í –ë–î")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        print("üîç –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ orders:")
        cursor.execute("PRAGMA table_info(orders)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"   {col[1]} ({col[2]})")
        
        print(f"\nüìä –ö–û–õ–ò–ß–ï–°–¢–í–û –ó–ê–ö–ê–ó–û–í: {cursor.execute('SELECT COUNT(*) FROM orders').fetchone()[0]}")
        
        print("\nüìã –ü–û–°–õ–ï–î–ù–ò–ï 5 –ó–ê–ö–ê–ó–û–í:")
        cursor.execute("SELECT * FROM orders ORDER BY id DESC LIMIT 5")
        orders = cursor.fetchall()
        
        if orders:
            column_names = [description[0] for description in cursor.description]
            print(f"   –ö–æ–ª–æ–Ω–∫–∏: {column_names}")
            print()
            
            for order in orders:
                order_dict = dict(zip(column_names, order))
                print(f"   –ó–∞–∫–∞–∑ #{order_dict['id']}:")
                print(f"      user_id: {order_dict['user_id']}")
                print(f"      phone: {order_dict.get('phone', '–ù–ï–¢')}")
                print(f"      delivery_address: {order_dict.get('delivery_address', '–ù–ï–¢')}")
                print(f"      payment_method: {order_dict.get('payment_method', '–ù–ï–¢')}")
                print(f"      status: {order_dict.get('status', '–ù–ï–¢')}")
                print(f"      total_price: {order_dict.get('total_price', '–ù–ï–¢')}")
                print(f"      comment: {order_dict.get('comment', '–ù–ï–¢')}")
                print(f"      created_at: {order_dict.get('created_at', '–ù–ï–¢')}")
                print()
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_orders_table()

