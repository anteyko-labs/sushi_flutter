#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os

def check_database_content():
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–û–î–ï–†–ñ–ò–ú–û–ì–û –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    db_path = 'sushi_express.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
        tables = ['users', 'ingredients', 'rolls', 'sets', 'orders', 'order_items']
        
        for table in tables:
            try:
                cursor.execute(f"SELECT COUNT(*) FROM {table}")
                count = cursor.fetchone()[0]
                print(f"üìä {table}: {count} –∑–∞–ø–∏—Å–µ–π")
                
                if table == 'rolls' and count > 0:
                    print("   üç£ –ü—Ä–∏–º–µ—Ä—ã —Ä–æ–ª–ª–æ–≤:")
                    cursor.execute("SELECT id, name, price FROM rolls LIMIT 5")
                    rolls = cursor.fetchall()
                    for roll in rolls:
                        print(f"      ID {roll[0]}: {roll[1]} - {roll[2]} —Å–æ–º")
                
                elif table == 'sets' and count > 0:
                    print("   üç± –ü—Ä–∏–º–µ—Ä—ã —Å–µ—Ç–æ–≤:")
                    cursor.execute("SELECT id, name, price FROM sets LIMIT 5")
                    sets = cursor.fetchall()
                    for set_item in sets:
                        print(f"      ID {set_item[0]}: {set_item[1]} - {set_item[2]} —Å–æ–º")
                
                elif table == 'ingredients' and count > 0:
                    print("   ü•¢ –ü—Ä–∏–º–µ—Ä—ã –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
                    cursor.execute("SELECT id, name, stock_quantity FROM ingredients LIMIT 5")
                    ingredients = cursor.fetchall()
                    for ing in ingredients:
                        print(f"      ID {ing[0]}: {ing[1]} - {ing[2]} —à—Ç")
                
            except sqlite3.Error as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã {table}: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã rolls
        print("\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã rolls:")
        cursor.execute("PRAGMA table_info(rolls)")
        columns = cursor.fetchall()
        for col in columns:
            print(f"   {col[1]} ({col[2]})")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    check_database_content()

