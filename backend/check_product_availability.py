#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sqlite3

def check_product_availability():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –¢–û–í–ê–†–û–í")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('sushi_express.db')
        cursor = conn.cursor()
        
        print("üìã –ü–†–û–í–ï–†–ö–ê –ù–ê–õ–ò–ß–ò–Ø –ò–ù–ì–†–ï–î–ò–ï–ù–¢–û–í")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –Ω—É–ª–µ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
        cursor.execute("""
            SELECT name, stock_quantity, unit 
            FROM ingredients 
            WHERE stock_quantity <= 0 OR stock_quantity IS NULL
            ORDER BY name
        """)
        low_ingredients = cursor.fetchall()
        
        if low_ingredients:
            print("‚ùå –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –Ω—É–ª–µ–≤—ã–º –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º:")
            for ingredient in low_ingredients:
                print(f"  - {ingredient[0]}: {ingredient[1]} {ingredient[2]}")
        else:
            print("‚úÖ –í—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –Ω–∞–ª–∏—á–∏–∏")
        
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –†–û–õ–õ–û–í")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–ª—ã —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏
        cursor.execute("""
            SELECT DISTINCT r.name as roll_name, r.id, r.sale_price
            FROM rolls r
            JOIN roll_ingredients ri ON r.id = ri.roll_id
            JOIN ingredients i ON ri.ingredient_id = i.id
            WHERE i.stock_quantity <= 0 OR i.stock_quantity IS NULL
            ORDER BY r.name
        """)
        unavailable_rolls = cursor.fetchall()
        
        if unavailable_rolls:
            print("‚ùå –†–æ–ª–ª—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
            for roll in unavailable_rolls:
                print(f"  - {roll[0]} (ID: {roll[1]}) - {roll[2]} —Å–æ–º")
        else:
            print("‚úÖ –í—Å–µ —Ä–æ–ª–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã")
        
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –°–ï–¢–û–í")
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—ã —Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ä–æ–ª–ª–∞–º–∏
        cursor.execute("""
            SELECT DISTINCT s.name as set_name, s.id, s.set_price
            FROM sets s
            JOIN set_rolls sr ON s.id = sr.set_id
            JOIN rolls r ON sr.roll_id = r.id
            JOIN roll_ingredients ri ON r.id = ri.roll_id
            JOIN ingredients i ON ri.ingredient_id = i.id
            WHERE i.stock_quantity <= 0 OR i.stock_quantity IS NULL
            ORDER BY s.name
        """)
        unavailable_sets = cursor.fetchall()
        
        if unavailable_sets:
            print("‚ùå –°–µ—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
            for set_item in unavailable_sets:
                print(f"  - {set_item[0]} (ID: {set_item[1]}) - {set_item[2]} —Å–æ–º")
        else:
            print("‚úÖ –í—Å–µ —Å–µ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã")
        
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ù–ì–†–ï–î–ò–ï–ù–¢–û–í")
        print("-" * 40)
        
        # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
        cursor.execute("SELECT COUNT(*) FROM ingredients")
        total_ingredients = cursor.fetchone()[0]
        print(f"ü•¨ –í—Å–µ–≥–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {total_ingredients}")
        
        # –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –Ω–∞–ª–∏—á–∏–∏
        cursor.execute("SELECT COUNT(*) FROM ingredients WHERE stock_quantity > 0")
        available_ingredients = cursor.fetchone()[0]
        print(f"‚úÖ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏: {available_ingredients}")
        
        # –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ –∏—Å—Ö–æ–¥–µ (–º–µ–Ω—å—à–µ 100)
        cursor.execute("SELECT COUNT(*) FROM ingredients WHERE stock_quantity > 0 AND stock_quantity < 100")
        low_stock = cursor.fetchone()[0]
        print(f"‚ö†Ô∏è –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –∏—Å—Ö–æ–¥–µ (<100): {low_stock}")
        
        print("\nüìã –ü–†–ò–ú–ï–†–´ –ò–ù–ì–†–ï–î–ò–ï–ù–¢–û–í –ù–ê –ò–°–•–û–î–ï")
        print("-" * 40)
        
        cursor.execute("""
            SELECT name, stock_quantity, unit 
            FROM ingredients 
            WHERE stock_quantity > 0 AND stock_quantity < 100
            ORDER BY stock_quantity ASC
            LIMIT 10
        """)
        low_stock_ingredients = cursor.fetchall()
        
        if low_stock_ingredients:
            for ingredient in low_stock_ingredients:
                print(f"  - {ingredient[0]}: {ingredient[1]} {ingredient[2]}")
        else:
            print("  –í—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ")
        
        conn.close()
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    check_product_availability()

