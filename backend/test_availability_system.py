#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤
"""

import requests
import json

def test_availability_system():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ü–†–û–í–ï–†–ö–ò –ù–ê–õ–ò–ß–ò–Ø")
    print("=" * 50)
    
    base_url = 'http://127.0.0.1:5000/api'
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("üìù –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–ª–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è")
    try:
        response = requests.get(f'{base_url}/rolls')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–æ–ª–ª–æ–≤: {len(data['rolls'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ä–æ–ª–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ
            for i, roll in enumerate(data['rolls'][:3]):
                print(f"  {i+1}. {roll['name']} - {roll['sale_price']} —Å–æ–º")
                print(f"     –î–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if roll['is_available'] else '‚ùå'}")
                if not roll['is_available']:
                    print(f"     –ü—Ä–∏—á–∏–Ω–∞: {roll['availability_message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞–ª–∏—á–∏—è")
    try:
        response = requests.get(f'{base_url}/sets')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–µ—Ç–æ–≤: {len(data['sets'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å–µ—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ
            for i, set_item in enumerate(data['sets'][:3]):
                print(f"  {i+1}. {set_item['name']} - {set_item['set_price']} —Å–æ–º")
                print(f"     –î–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if set_item['is_available'] else '‚ùå'}")
                if not set_item['is_available']:
                    print(f"     –ü—Ä–∏—á–∏–Ω–∞: {set_item['availability_message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüìù –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–æ–ª–ª–∞")
    try:
        response = requests.get(f'{base_url}/rolls/1/availability')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –†–æ–ª–ª ID 1:")
            print(f"   –î–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if data['is_available'] else '‚ùå'}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüìù –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ç–∞")
    try:
        response = requests.get(f'{base_url}/sets/1/availability')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–µ—Ç ID 1:")
            print(f"   –î–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if data['is_available'] else '‚ùå'}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data['message']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\nüìù –¢–µ—Å—Ç 5: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    try:
        # –í—Ö–æ–¥–∏–º –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        login_data = {
            'email': 'oo@gmail.com',
            'password': '123456'
        }
        
        login_response = requests.post(f'{base_url}/login', json=login_data)
        if login_response.status_code == 200:
            token = login_response.json()['access_token']
            headers = {'Authorization': f'Bearer {token}'}
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª–ª –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart_data = {
                'item_type': 'roll',
                'item_id': 1,
                'quantity': 1
            }
            
            cart_response = requests.post(f'{base_url}/cart/add', 
                                        headers=headers, json=cart_data)
            if cart_response.status_code == 200:
                print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: {cart_response.text}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_availability_system()

