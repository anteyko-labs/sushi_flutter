#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import json
import sqlite3
from datetime import datetime

def test_order_flow():
    print("üß™ –¢–ï–°–¢ –¶–ï–ü–û–ß–ö–ò –ó–ê–ö–ê–ó–û–í")
    print("=" * 50)
    
    base_url = "http://localhost:5002/api"
    
    # –®–∞–≥ 1: –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("üìù –®–∞–≥ 1: –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    login_data = {
        "email": "oo@gmail.com",
        "password": "123456"
    }
    
    response = requests.post(f"{base_url}/login", json=login_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code} - {response.text}")
        return
    
    token = response.json()["access_token"]
    headers = {"Authorization": f"Bearer {token}"}
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª")
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
    print("\nüìù –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É")
    response = requests.get(f"{base_url}/cart", headers=headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã: {response.status_code} - {response.text}")
        return
    
    cart_data = response.json()
    print(f"‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞: {cart_data['total_items']} —Ç–æ–≤–∞—Ä–æ–≤")
    
    if cart_data['total_items'] == 0:
        print("‚ö†Ô∏è –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä")
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        add_data = {
            "item_type": "roll",
            "item_id": 1,
            "quantity": 2
        }
        response = requests.post(f"{base_url}/cart/add", json=add_data, headers=headers)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: {response.status_code} - {response.text}")
            return
        print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É —Å–Ω–æ–≤–∞
        response = requests.get(f"{base_url}/cart", headers=headers)
        cart_data = response.json()
    
    # –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    print("\nüìù –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞")
    order_data = {
        "delivery_address": "—É–ª. –ß—É–π, –¥. 123, –∫–≤. 45, –ë–∏—à–∫–µ–∫",
        "phone": "+996 555 123 456",
        "payment_method": "cash",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑",
        "items": cart_data["cart"]
    }
    
    print(f"üì¶ –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:")
    print(f"   –ê–¥—Ä–µ—Å: {order_data['delivery_address']}")
    print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {order_data['phone']}")
    print(f"   –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {order_data['payment_method']}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤: {len(order_data['items'])}")
    
    response = requests.post(f"{base_url}/orders", json=order_data, headers=headers)
    if response.status_code != 201:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code} - {response.text}")
        return
    
    order_result = response.json()
    order_id = order_result["order"]["id"]
    print(f"‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: ID {order_id}")
    
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("\nüìù –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    conn = sqlite3.connect('sushi_express.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑
    cursor.execute("SELECT * FROM orders WHERE id = ?", (order_id,))
    order = cursor.fetchone()
    
    if order:
        print("‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   ID: {order[0]}")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {order[1]}")
        print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {order[2]}")
        print(f"   –ê–¥—Ä–µ—Å: {order[3]}")
        print(f"   –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {order[4]}")
        print(f"   –°—Ç–∞—Ç—É—Å: {order[5]}")
        print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {order[6]} —Å–æ–º")
        print(f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order[7]}")
        print(f"   –°–æ–∑–¥–∞–Ω: {order[8]}")
    else:
        print("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        conn.close()
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–∞
    cursor.execute("SELECT * FROM order_items WHERE order_id = ?", (order_id,))
    items = cursor.fetchall()
    
    print(f"\nüì¶ –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–∞ ({len(items)} —à—Ç.):")
    for item in items:
        print(f"   ID: {item[0]}, –¢–∏–ø: {item[2]}, ID —Ç–æ–≤–∞—Ä–∞: {item[3]}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[4]}, –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item[5]}, –û–±—â–∞—è —Ü–µ–Ω–∞: {item[6]}")
    
    conn.close()
    
    # –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ API
    print("\nüìù –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ API")
    response = requests.get(f"{base_url}/orders/{order_id}", headers=headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: {response.status_code} - {response.text}")
        return
    
    api_order = response.json()["order"]
    print("‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ API:")
    print(f"   ID: {api_order['id']}")
    print(f"   –°—Ç–∞—Ç—É—Å: {api_order['status']}")
    print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {api_order['total_price']} —Å–æ–º")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤: {len(api_order['items'])}")
    
    # –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞
    print("\nüìù –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞")
    response = requests.get(f"{base_url}/cart", headers=headers)
    cart_after = response.json()
    print(f"‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞: {cart_after['total_items']} —Ç–æ–≤–∞—Ä–æ–≤")
    
    # –®–∞–≥ 7: –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\nüìù –®–∞–≥ 7: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    response = requests.get(f"{base_url}/orders", headers=headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤: {response.status_code} - {response.text}")
        return
    
    user_orders = response.json()["orders"]
    print(f"‚úÖ –ó–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(user_orders)}")
    
    # –®–∞–≥ 8: –¢–µ—Å—Ç –¥–ª—è —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞
    print("\nüìù –®–∞–≥ 8: –¢–µ—Å—Ç –¥–ª—è —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞")
    chef_login = {
        "email": "chef@sushiroll.com",
        "password": "chef123"
    }
    
    response = requests.post(f"{base_url}/login", json=chef_login)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {response.status_code} - {response.text}")
        return
    
    chef_token = response.json()["access_token"]
    chef_headers = {"Authorization": f"Bearer {chef_token}"}
    print("‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä –≤–æ—à–µ–ª")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
    response = requests.get(f"{base_url}/orders/all", headers=chef_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤: {response.status_code} - {response.text}")
        return
    
    all_orders = response.json()["orders"]
    print(f"‚úÖ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_orders)}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
    update_data = {"status": "–ì–æ—Ç–æ–≤–∏—Ç—Å—è"}
    response = requests.put(f"{base_url}/orders/{order_id}/status", json=update_data, headers=chef_headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {response.status_code} - {response.text}")
        return
    
    print("‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '–ì–æ—Ç–æ–≤–∏—Ç—Å—è'")
    
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    print("=" * 50)
    print("‚úÖ –¶–µ–ø–æ—á–∫–∞ –∑–∞–∫–∞–∑–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
    print("   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏")
    print("   - –ö–æ—Ä–∑–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("   - –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è")
    print("   - –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î")
    print("   - API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("   - –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞")
    print("   - –®–µ—Ñ-–ø–æ–≤–∞—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑–∞–º–∏")

if __name__ == "__main__":
    test_order_flow()
