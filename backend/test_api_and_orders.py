#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
"""

import requests
import json
import time

def test_api_and_orders():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ò –ó–ê–ö–ê–ó–û–í")
    print("=" * 50)
    
    base_url = 'http://127.0.0.1:5000/api'
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    
    try:
        print("üìù –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API")
        response = requests.get(f'{base_url}/health')
        if response.status_code == 200:
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    try:
        print("\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–ª–æ–≤")
        response = requests.get(f'{base_url}/rolls')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–æ–ª–ª–æ–≤: {len(data['rolls'])}")
            if data['rolls']:
                print("   üç£ –ü—Ä–∏–º–µ—Ä—ã —Ä–æ–ª–ª–æ–≤:")
                for roll in data['rolls'][:3]:
                    print(f"      {roll['name']} - {roll['price']} —Å–æ–º")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–ª–ª–æ–≤: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–ª–æ–≤: {e}")
    
    try:
        print("\nüìù –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ç–æ–≤")
        response = requests.get(f'{base_url}/sets')
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–µ—Ç–æ–≤: {len(data['sets'])}")
            if data['sets']:
                print("   üç± –ü—Ä–∏–º–µ—Ä—ã —Å–µ—Ç–æ–≤:")
                for set_item in data['sets'][:3]:
                    print(f"      {set_item['name']} - {set_item['price']} —Å–æ–º")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ç–æ–≤: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–µ—Ç–æ–≤: {e}")
    
    try:
        print("\nüìù –¢–µ—Å—Ç 4: –í—Ö–æ–¥ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        login_data = {
            'email': 'oo@gmail.com',
            'password': '123456'
        }
        
        login_response = requests.post(f'{base_url}/login', json=login_data)
        if login_response.status_code == 200:
            user_token = login_response.json()['access_token']
            user_headers = {'Authorization': f'Bearer {user_token}'}
            user_info = login_response.json()['user']
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª: {user_info['name']} ({user_info['email']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {login_response.text}")
            return
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return
    
    try:
        print("\nüìù –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞")
        order_data = {
            'delivery_address': '—É–ª. –ß—É–π 12, –ë–∏—à–∫–µ–∫',
            'phone': '+996700708003',
            'payment_method': 'cash',
            'comment': '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞ - –ø–æ—Å–∫–æ—Ä–µ–µ!',
            'items': [
                {
                    'item_type': 'roll',
                    'item_id': 153,  # –ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è
                    'quantity': 2,
                    'name': '–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è',
                    'price': 370.0
                },
                {
                    'item_type': 'roll',
                    'item_id': 154,  # –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è
                    'quantity': 1,
                    'name': '–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è',
                    'price': 700.0
                }
            ]
        }
        
        order_response = requests.post(f'{base_url}/orders', 
                                     headers=user_headers, json=order_data)
        if order_response.status_code == 201:
            order_result = order_response.json()
            new_order_id = order_result['order']['id']
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #{new_order_id}")
            print(f"   üí∞ –°—É–º–º–∞: {order_result['order']['total_price']} —Å–æ–º")
            print(f"   üìä –°—Ç–∞—Ç—É—Å: {order_result['order']['status']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: {order_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {order_response.text}")
            return
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
        return
    
    try:
        print("\nüìù –¢–µ—Å—Ç 6: –í—Ö–æ–¥ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞")
        chef_login_data = {
            'email': 'chef@sushiroll.com',
            'password': 'chef123'
        }
        
        chef_login_response = requests.post(f'{base_url}/login', json=chef_login_data)
        if chef_login_response.status_code == 200:
            chef_token = chef_login_response.json()['access_token']
            chef_headers = {'Authorization': f'Bearer {chef_token}'}
            chef_info = chef_login_response.json()['user']
            print(f"‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä –≤–æ—à–µ–ª: {chef_info['name']} ({chef_info['email']})")
            print(f"   üîë –ê–¥–º–∏–Ω: {'–î–∞' if chef_info['is_admin'] else '–ù–µ—Ç'}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {chef_login_response.text}")
            return
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {e}")
        return
    
    try:
        print("\nüìù –¢–µ—Å—Ç 7: –®–µ—Ñ-–ø–æ–≤–∞—Ä –≤–∏–¥–∏—Ç –∑–∞–∫–∞–∑—ã")
        chef_response = requests.get(f'{base_url}/orders/all', headers=chef_headers)
        if chef_response.status_code == 200:
            chef_data = chef_response.json()
            print(f"‚úÖ –®–µ—Ñ-–ø–æ–≤–∞—Ä –≤–∏–¥–∏—Ç {chef_data['total']} –∑–∞–∫–∞–∑–æ–≤")
            
            if chef_data['total'] > 0:
                print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:")
                orders = chef_data['orders'][:3]
                for order in orders:
                    print(f"   üÜî –ó–∞–∫–∞–∑ #{order['id']}")
                    print(f"      üë§ –û—Ç: {order.get('user_name', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"      üì± –¢–µ–ª–µ—Ñ–æ–Ω: {order.get('user_phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"      üìç –ê–¥—Ä–µ—Å: {order.get('delivery_address', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"      üí∞ –°—É–º–º–∞: {order['total_price']} —Å–æ–º")
                    print(f"      üìä –°—Ç–∞—Ç—É—Å: {order['status']}")
                    print(f"      üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {order.get('comment', '–ù–µ—Ç')}")
                    print()
            else:
                print("üì≠ –ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —É —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {chef_response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {chef_response.text}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤ —É —à–µ—Ñ-–ø–æ–≤–∞—Ä–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api_and_orders()

