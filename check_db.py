import sqlite3
import os

def check_database():
    db_paths = [
        'instance/sushi_express.db',
        'backend/instance/sushi_express.db',
        'sushi_express.db'
    ]
    
    for db_path in db_paths:
        if os.path.exists(db_path):
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
            try:
                conn = sqlite3.connect(db_path)
                cursor = conn.cursor()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
                cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
                tables = cursor.fetchall()
                print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {[table[0] for table in tables]}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
                for table in ['users', 'ingredients', 'rolls', 'sets']:
                    try:
                        cursor.execute(f'SELECT COUNT(*) FROM {table}')
                        count = cursor.fetchone()[0]
                        print(f"üìä {table.capitalize()}: {count} –∑–∞–ø–∏—Å–µ–π")
                    except sqlite3.OperationalError:
                        print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                conn.close()
                return db_path
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ {db_path}: {e}")
        else:
            print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
    
    return None

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    db_path = check_database()
    
    if db_path:
        print(f"\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç: {db_path}")
    else:
        print("\n‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏–≥–¥–µ!")
